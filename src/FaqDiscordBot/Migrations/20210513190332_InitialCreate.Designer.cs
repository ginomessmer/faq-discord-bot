// <auto-generated />
using System;
using FaqDiscordBot.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FaqDiscordBot.Migrations
{
    [DbContext(typeof(FaqDbContext))]
    [Migration("20210513190332_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FaqDiscordBot.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FaqDiscordBot.Models.Question", b =>
                {
                    b.OwnsOne("FaqDiscordBot.Models.Answer", "Answer", b1 =>
                        {
                            b1.Property<int>("QuestionId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("MessageId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<string>("Text")
                                .HasColumnType("text");

                            b1.Property<decimal>("UserId")
                                .HasColumnType("numeric(20,0)");

                            b1.HasKey("QuestionId");

                            b1.ToTable("Answers");

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.OwnsMany("FaqDiscordBot.Models.Phrasing", "Phrasings", b1 =>
                        {
                            b1.Property<int>("QuestionId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Text")
                                .HasColumnType("text");

                            b1.HasKey("QuestionId", "Id");

                            b1.ToTable("QuestionPhrasings");

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.OwnsOne("FaqDiscordBot.Models.QuestionMeta", "Meta", b1 =>
                        {
                            b1.Property<int>("QuestionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<decimal>("MessageId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<DateTime?>("ReminderAt")
                                .HasColumnType("timestamp without time zone");

                            b1.HasKey("QuestionId");

                            b1.ToTable("Questions");

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.Navigation("Answer");

                    b.Navigation("Meta");

                    b.Navigation("Phrasings");
                });
#pragma warning restore 612, 618
        }
    }
}
